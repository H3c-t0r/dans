"""chat-rework

Revision ID: 8e30874ad715
Revises: baf71f781b9e
Create Date: 2023-12-05 00:59:57.832200

"""
import fastapi_users_db_sqlalchemy
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from danswer.configs.constants import DocumentSource

# revision identifiers, used by Alembic.
revision = "8e30874ad715"
down_revision = "baf71f781b9e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "search_doc",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("document_id", sa.String(), nullable=False),
        sa.Column("chunk_ind", sa.Integer(), nullable=False),
        sa.Column("semantic_id", sa.String(), nullable=False),
        sa.Column("link", sa.String(), nullable=True),
        sa.Column("blurb", sa.String(), nullable=False),
        sa.Column(
            "source_type",
            sa.Enum(DocumentSource, native=False),
            nullable=False,
        ),
        sa.Column("boost", sa.Integer(), nullable=False),
        sa.Column("hidden", sa.Boolean(), nullable=False),
        sa.Column("score", sa.Float(), nullable=False),
        sa.Column("match_highlights", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("primary_owners", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("secondary_owners", postgresql.ARRAY(sa.String()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "prompt",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id",
            fastapi_users_db_sqlalchemy.generics.GUID(),
            nullable=True,
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("system_prompt", sa.Text(), nullable=False),
        sa.Column("task_prompt", sa.Text(), nullable=False),
        sa.Column("include_citations", sa.Boolean(), nullable=False),
        sa.Column("datetime_aware", sa.Boolean(), nullable=False),
        sa.Column("default_prompt", sa.Boolean(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "persona__prompt",
        sa.Column("persona_id", sa.Integer(), nullable=False),
        sa.Column("prompt_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["persona_id"],
            ["persona.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prompt_id"],
            ["prompt.id"],
        ),
        sa.PrimaryKeyConstraint("persona_id", "prompt_id"),
    )
    op.add_column(
        "chat_feedback",
        sa.Column("chat_message_id", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "chat_feedback_chat_message_chat_session_id_chat_message_me_fkey",
        "chat_feedback",
        type_="foreignkey",
    )
    op.drop_column("chat_feedback", "chat_message_edit_number")
    op.drop_column("chat_feedback", "chat_message_chat_session_id")
    op.drop_column("chat_feedback", "chat_message_message_number")
    op.drop_constraint("chat_message_pkey", "chat_message", type_="primary")
    op.add_column(
        "chat_message",
        sa.Column(
            "id",
            sa.Integer(),
            primary_key=True,
            autoincrement=True,
            nullable=False,
            unique=True,
        ),
    )
    op.add_column("chat_message", sa.Column("prompt_id", sa.Integer(), nullable=True))
    op.add_column(
        "chat_message",
        sa.Column("parent_message", sa.Integer(), nullable=True),
    )
    op.add_column(
        "chat_message",
        sa.Column("error", sa.Text(), nullable=True),
    )
    op.add_column(
        "chat_message",
        sa.Column("latest_child_message", sa.Integer(), nullable=True),
    )
    op.add_column(
        "chat_message",
        sa.Column("rephrased_query", sa.Text(), nullable=True),
    )
    op.add_column(
        "chat_message",
        sa.Column(
            "gen_ai_feedback",
            sa.Enum("LIKE", "DISLIKE", name="qafeedbacktype", native_enum=False),
            nullable=True,
        ),
    )
    op.drop_constraint("fk_chat_message_persona_id", "chat_message", type_="foreignkey")
    op.drop_column("chat_message", "latest")
    op.drop_column("chat_message", "edit_number")
    op.drop_column("chat_message", "reference_docs")
    op.drop_column("chat_message", "persona_id")
    op.drop_column("chat_message", "parent_edit_number")
    op.drop_column("chat_message", "message_number")
    op.alter_column(
        "chat_session",
        "persona_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.add_column("chat_session", sa.Column("one_shot", sa.Boolean(), nullable=False))
    op.add_column(
        "document_retrieval_feedback",
        sa.Column("chat_message_id", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "document_retrieval_feedback_qa_event_id_fkey",
        "document_retrieval_feedback",
        type_="foreignkey",
    )
    op.drop_column("document_retrieval_feedback", "qa_event_id")
    op.add_column(
        "persona",
        sa.Column(
            "user_id",
            fastapi_users_db_sqlalchemy.generics.GUID(),
            nullable=True,
        ),
    )
    op.add_column(
        "persona",
        sa.Column("llm_relevance_filter", sa.Boolean()),
    )
    op.add_column(
        "persona",
        sa.Column("llm_filter_extraction", sa.Boolean()),
    )
    op.add_column(
        "persona",
        sa.Column(
            "search_type",
            sa.Enum(
                "keyword", "semantic", "hybrid", name="search_type", native_enum=False
            ),
            nullable=True,
        ),
    )
    op.add_column(
        "persona",
        sa.Column(
            "recency_bias",
            sa.Enum(
                "favor_recent",
                "base_decay",
                "no_decay",
                "auto",
                name="recency_bias",
                native_enum=False,
            ),
        ),
    )
    op.alter_column(
        "persona",
        "num_chunks",
        existing_type=sa.INTEGER(),
        type_=sa.FLOAT(),
        nullable=False,
    )
    op.create_foreign_key(None, "persona", "user", ["user_id"], ["id"])
    op.drop_column("persona", "apply_llm_relevance_filter")
    op.drop_column("persona", "hint_text")
    op.drop_column("persona", "tools")
    op.drop_column("persona", "system_text")
    op.drop_column("persona", "datetime_aware")
    op.drop_column("persona", "retrieval_enabled")

    op.create_foreign_key(None, "chat_message", "prompt", ["prompt_id"], ["id"])
    op.create_foreign_key(
        None, "chat_feedback", "chat_message", ["chat_message_id"], ["id"]
    )
    op.create_foreign_key(
        None,
        "document_retrieval_feedback",
        "chat_message",
        ["chat_message_id"],
        ["id"],
    )
    op.create_table(
        "chat_message__search_doc",
        sa.Column("chat_message_id", sa.Integer(), nullable=False),
        sa.Column("search_doc_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chat_message_id"],
            ["chat_message.id"],
        ),
        sa.ForeignKeyConstraint(
            ["search_doc_id"],
            ["search_doc.id"],
        ),
        sa.PrimaryKeyConstraint("chat_message_id", "search_doc_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
