apiVersion: v1
kind: Service
metadata:
  name: {{ include "danswer.fullname" . }}-postgres
spec:
  selector:
    app: relational-db
  ports:
    - protocol: TCP
      port: {{ .Values.postgres.service.port }}
      targetPort: {{ .Values.postgres.service.targetPort }}
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "danswer.fullname" . }}-postgres
spec:
  serviceName: {{ include "danswer.fullname" . }}-postgres
  replicas: {{ .Values.postgres.replicaCount }}
  selector:
    matchLabels:
      app: relational-db
  template:
    metadata:
      labels:
        app: relational-db
    spec:
      containers:
      - name: relational-db
        image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: danswer-secrets
              key: postgres_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: danswer-secrets
              key: postgres_password
        ports:
        - containerPort: {{ .Values.postgres.containerPort }}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-storage
          subPath: postgres
  volumeClaimTemplates:
  - metadata:
      name: db-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          # Adjust the storage request size as needed.
          storage: {{ .Values.postgres.persistence.size }}
