name: Build, Push to ECR and Deploy to Elastic Beanstalk UAT Environment

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_MODEL_REPOSITORY: chp-model-server
  ECR_API_REPOSITORY: chp-api-server
  ECR_WEB_REPOSITORY: chp-web
  IMAGE_TAG: ${{ github.sha }}
  VERSION_LABEL: "app-a16b-240711_142709888259"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

    - name: Build Docker image
      run: |
        docker build -t ${{ env.ECR_API_REPOSITORY }}:$IMAGE_TAG -f ./backend/Dockerfile ./backend
        docker build -t ${{ env.ECR_MODEL_REPOSITORY }}:$IMAGE_TAG -f ./backend/Dockerfile.model_server ./backend
        docker build -t ${{ env.ECR_WEB_REPOSITORY }}:$IMAGE_TAG -f ./web/Dockerfile ./web

    - name: Tag Docker image
      run: |
        docker tag ${{ env.ECR_MODEL_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_MODEL_REPOSITORY }}:$IMAGE_TAG
        docker tag ${{ env.ECR_MODEL_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_MODEL_REPOSITORY }}:latest

        docker tag ${{ env.ECR_API_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_API_REPOSITORY }}:$IMAGE_TAG
        docker tag ${{ env.ECR_API_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_API_REPOSITORY }}:latest
        
        docker tag ${{ env.ECR_WEB_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_WEB_REPOSITORY }}:$IMAGE_TAG
        docker tag ${{ env.ECR_WEB_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_WEB_REPOSITORY }}:latest
      
    - name: Push Docker image to ECR
      run: |
        docker tag ${{ env.ECR_MODEL_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_MODEL_REPOSITORY }}:$IMAGE_TAG
        docker tag ${{ env.ECR_MODEL_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_MODEL_REPOSITORY }}:latest

        docker tag ${{ env.ECR_API_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_API_REPOSITORY }}:$IMAGE_TAG
        docker tag ${{ env.ECR_API_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_API_REPOSITORY }}:latest
        
        docker tag ${{ env.ECR_WEB_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_WEB_REPOSITORY }}:$IMAGE_TAG
        docker tag ${{ env.ECR_WEB_REPOSITORY }}:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_WEB_REPOSITORY }}:latest

  deploy:
      runs-on: ubuntu-latest
      needs: build-and-push

      steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Deploy to Elastic Beanstalk
            uses: einaregilsson/beanstalk-deploy@v22
            with:
              aws_access_key: ${{ secrets.AWS_EB_CICD_ACCESS_KEY }}
              aws_secret_key: ${{ secrets.AWS_EB_CICD_SECRET_ACCESS_KEY }}
              region: ${{ env.AWS_REGION }}
              application_name: "enmedd-chp"
              environment_name: "chp-uat"
              version_label: $VERSION_LABEL

                